import os
#from django.core.mail import send_mail

gettext = lambda s: s
DATA_DIR = os.path.dirname(os.path.dirname(__file__))

# from _cms.apps.spirit.settings import *
"""
Django settings for _cms project.

Generated by 'django-admin startproject' using Django 1.8.17.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'sqsx4i#lur2o+--rehh+a9i%pfy$o(&7ymqqey0-a^*xe8%6^_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['alpha.ssrd.com']


# Application definition

ROOT_URLCONF = '_cms.urls'

WSGI_APPLICATION = '_cms.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'django_ssrd',
        'USER': 'test2_ssrd',
        'PASSWORD': 'cVJZhdUp',
        'HOST': 'mysql.ssrd.com',
        'PORT': '3306',
    }
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'America/New_York'

USE_I18N = False

USE_L10N = False

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(DATA_DIR, 'media')
STATIC_ROOT = os.path.join(DATA_DIR, 'static')

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, '_cms', 'static'),
)
SITE_ID = 1

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, '_cms', 'templates'),],
        'OPTIONS': {
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.core.context_processors.i18n',
                'django.core.context_processors.debug',
                'django.core.context_processors.request',
                'django.core.context_processors.media',
                'django.core.context_processors.csrf',
                'django.core.context_processors.tz',
                'sekizai.context_processors.sekizai',
                'django.core.context_processors.static',
                'cms.context_processors.cms_settings'
            ],
            'loaders': [
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
                'django.template.loaders.eggs.Loader'
            ],
        },
    },
]


MIDDLEWARE_CLASSES = (
    'cms.middleware.utils.ApphookReloadMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'cms.middleware.user.CurrentUserMiddleware',
    'cms.middleware.page.CurrentPageMiddleware',
    'cms.middleware.toolbar.ToolbarMiddleware',
    'cms.middleware.language.LanguageCookieMiddleware',
    #'djangocms_ckeditor_filer.middleware.ThumbnailMiddleware'

)

# All auth related
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)

INSTALLED_APPS = (
    # installed by django cms
    'djangocms_admin_style',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.admin',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.staticfiles',
    'django.contrib.messages',
    'cms',
    'menus',
    'sekizai',

    # manage tree of pages
    'treebeard',
    'djangocms_text_ckeditor',
    'filer',
    'easy_thumbnails',
    'djangocms_column',
    'djangocms_link',
    'cmsplugin_filer_file',
    'cmsplugin_filer_folder',
    'cmsplugin_filer_image',
    'cmsplugin_filer_utils',
    #'djangocms_style',
    'djangocms_snippet',
    'djangocms_googlemap',
    'djangocms_video',

    # installed apps
    'aldryn_reversion',
    'reversion',

    # Aldryn stuff
    'aldryn_apphooks_config',
    'aldryn_categories',
    'aldryn_common',
    #'aldryn_newsblog',
    #'aldryn_people',

    'aldryn_translation_tools',
    'parler',
    'sortedm2m',
    'taggit',

    'aldryn_style',
    'aldryn_bootstrap3',
    'bootstrap3',
    #'ckeditor_filebrowser_filer',
    # 'aldryn_boilerplates',

    #for staff only
    'djangocms_inline_comment',

    # external comments
    'djangocms_comments',

    #Django Allauth
    #'allauth',
    #'allauth.account',
    #'allauth.socialaccount',

    # Registration
    'registration',

    # search:
    'whoosh',
    'haystack',
    'aldryn_search',
    # standard-form on : https://github.com/alesdotio/django-standard-form
    'standard_form',
    'spurl',

    # my apps
    '_cms',
    'ssrd_datablog',
    'ssrd_people',
)

LANGUAGES = (
    ## Customize this
    ('en', gettext('en')),
)

CMS_LANGUAGES = {
    ## Customize this
    1: [
        {
            'code': 'en',
            'public': True,
            'redirect_on_fallback': True,
            'name': gettext('en'),
            'hide_untranslated': False,
        },
    ],
    'default': {
        'public': True,
        'redirect_on_fallback': True,
        'hide_untranslated': False,
    },
}

CMS_TEMPLATES = (
    ## Customize this
    ('fullwidth.html', 'Fullwidth'),
    ('fullwidth-comments.html', 'Fullwidth-comments'),
    ('sidebar_left.html', 'Sidebar Left'),
    ('sidebar_right.html', 'Sidebar Right'),
    ('tpl_home.html', 'Home'),
)

CMS_PERMISSION = True

CMS_PLACEHOLDER_CONF = {}

MIGRATION_MODULES = {
    
}

THUMBNAIL_PROCESSORS = (
    'easy_thumbnails.processors.colorspace',
    'easy_thumbnails.processors.autocrop',
    'filer.thumbnail_processors.scale_and_crop_with_subject_location',
    'easy_thumbnails.processors.filters'
)

# aldryn-style settings;
# define this lambda if it isn't already defined in your settings...
_ = lambda s: s

ALDRYN_STYLE_CLASS_NAMES = (
    ('container', _('container')),
    ('feature-visual', _('feature-visual')),
    ('feature-content', _('feature-content')),
    ('section', _('section')),
)

ALDRYN_STYLE_ALLOWED_TAGS = [
    'div', 'p', 'span', 'article', 'section', 'header', 'footer',
]

#CKeditor setting:
CKEDITOR_SETTINGS = {
    'toolbar_CMS': [
        #['Undo', 'Redo'],
        ['cmsplugins', '-', 'ShowBlocks'],
        ['Format', 'Styles'], ['Link', 'Image', ],
        ['TextColor','BGColor', '-', 'Bold', 'Italic', 'Underline', '-', 'Subscript', 'Superscript', '-', 'RemoveFormat'],
        ['JustifyLeft', 'JustifyCenter', 'JustifyRight'],
        ['NumberedList', 'BulletedList'], ['Outdent', 'Indent'],
        ['Source']
    ],
    #'extraPlugins': 'filerimage',
    #'removePlugins': 'image',
    'stylesSet': 'default:/static/js/ckeditor.wysiwyg.js',

    'contentsCss': ['/static/css/bootstrap.css','/static/css/modern-business.css','/static/css/font-awesome.min.css', ],
}

# ALDRYN_BOILERPLATE_NAME = 'bootstrap3'

# Django Registration
ACCOUNT_ACTIVATION_DAYS = 7
REGISTRATION_DEFAULT_FROM_EMAIL = "admin@ssrd.com"
REGISTRATION_AUTO_LOGIN = True

LOGIN_REDIRECT_URL = "/"

# Haystack setting
HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
        'PATH': os.path.join(os.path.dirname(__file__), 'whoosh_index'),
    },
    'en': {
        'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
        'PATH': os.path.join(os.path.dirname(__file__), 'whoosh_index'),
    },
}

HAYSTACK_ROUTERS = ['aldryn_search.router.LanguageRouter',]



# Aldryn Search

ALDRYN_SEARCH_CMS_PAGE = False
ALDRYN_SEARCH_DEFAULT_LANGUAGE = 'en'
ALDRYN_SEARCH_PAGINATION = 10
ALDRYN_SEARCH_REGISTER_APPHOOK = True

# Parler
PARLER_LANGUAGES = {
    None: (
        {'code': 'en',},
        {'code': 'en-us',},
    ),
    1: (
        {'code': 'en',},
        {'code': 'en-us',},
    ),
    'default': {
        'fallbacks': ['en'],          # defaults to PARLER_DEFAULT_LANGUAGE_CODE
        'hide_untranslated': True,   # the default; let .active_translations() return fallbacks too.
    }
}